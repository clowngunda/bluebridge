/*
幸运数 （打表）
历届试题 幸运数
时间限制：1.0s   内存限制：256.0MB
提交此题   锦囊1   锦囊2
问题描述
幸运数是波兰数学家乌拉姆命名的。它采用与生成素数类似的“筛法”生成

。
首先从1开始写出自然数1,2,3,4,5,6,....

1 就是第一个幸运数。

我们从2这个数开始。把所有序号能被2整除的项删除，变为：

1 _ 3 _ 5 _ 7 _ 9 ....

把它们缩紧，重新记序，为：

1 3 5 7 9 .... 。这时，3为第2个幸运数，然后把所有能被3整除的序号位置的数删去。注意，是序号位置，不是那个数本身能否被3整除!! 删除的应该是5，11, 17, ...

此时7为第3个幸运数，然后再删去序号位置能被7整除的(19,39,...)

最后剩下的序列类似：

1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, ...

输入格式
输入两个正整数m n, 用空格分开 (m < n < 1000*1000)
输出格式
程序输出 位于m和n之间的幸运数的个数（不包含m和n）。
样例输入1
1 20
样例输出1
5
样例输入2
30 69
样例输出2
8

*/

#include <cstdio>
#include <cstring>
#include <algorithm>
#include <ctime>
using namespace std;

const int maxn = 500000;
int num[maxn];
int cnt;	//表示当前幸运数的个数
int cur;

void fun(int num[], int ans[]) {	//每次减去一些数
	int t = num[cur], c = 0;
	for(int i = 1; i <= cnt; i++) {
		if(i % t) ans[++c] = num[i];
	}
	cur++;
	cnt = c;
}

void init() {		//初始化打表
	for(int i = 1; i <= 500000; i++) num[i] = (i << 1) - 1;
	cnt = 50000;
	cur = 2;
	for(int i = 3; num[cur] < cnt; i++) {
		fun(num, num);
	}
}

int main() {
	init();
	//freopen("out.txt", "w", stdout);
	//printf("%d\n", clock());
	//printf("%d\n", cnt);
	//for(int i = 1; i < 20; i++) printf("%d,", num[i]);
	int m, n;
	while(scanf("%d %d", &m, &n) != EOF) {
		int i, j;
		for(i = 1; i < 10000; i++) {
			if(num[i] > m) break;
		}
		for(j = 8772; j >= 1; j--) {
			if(num[j] < n) break;
		}
		printf("%d\n", j - i + 1);
	}
	return 0;
}
