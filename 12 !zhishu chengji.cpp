/*问题描述
　　Torry从小喜爱数学。一天，老师告诉他，像2、3、5、7……这样的数叫做质数。Torry突然想到一个问题，前10、100、1000、10000……个质数的乘积是多少呢？他把这个问题告诉老师。老师愣住了，一时回答不出来。于是Torry求助于会编程的你，请你算出前n个质数的乘积。不过，考虑到你才接触编程不久，Torry只要你算出这个数模上50000的值。
输入格式
　　仅包含一个正整数n，其中n<=100000。
输出格式
　　输出一行，即前n个质数的乘积模50000的值。
样例输入
1
样例输出
2

解题分析：
这里重点是想好怎么处理如何寻找素数。
这里我做的处理是从小到大的找素数。
*/
代码：
#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
int main()
{
int n, i, j, count = 0, sum = 1;
cin >> n;
//这里的处理是关键，首先为了防止超时，先进行开平方
//保证时间，二是利用求素数的方法，
//一般的求出来的素数是和比自己小的求模
//这里多加了一个判断，如果可以除尽并且是本身的话，
//那么也是素数
for(i = 2; i <= sqrt(10000); i++)

{
for (j = 2; j <i ; j++)
{
if(i % j == 0)
break;
}
if(j >= i)
{
count++;
sum *= i;
if(count == n)
break;
}
}
cout<<sum%50000<<endl;
return 0;
}
